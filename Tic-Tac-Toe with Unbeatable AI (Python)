import math

# Initialize the board
board = [" " for _ in range(9)]

# Print the current board
def print_board():
    print()
    for i in range(3):
        print(" | ".join(board[i*3:(i+1)*3]))
        if i < 2:
            print("--+---+--")
    print()

# Check if a player has won
def check_winner(brd, player):
    win_conditions = [
        [0, 1, 2], [3, 4, 5], [6, 7, 8],  # Rows
        [0, 3, 6], [1, 4, 7], [2, 5, 8],  # Columns
        [0, 4, 8], [2, 4, 6]              # Diagonals
    ]
    return any(all(brd[pos] == player for pos in line) for line in win_conditions)

# Check for a tie
def is_full(brd):
    return " " not in brd

# Minimax Algorithm
def minimax(brd, depth, is_maximizing):
    if check_winner(brd, "O"):
        return 1
    if check_winner(brd, "X"):
        return -1
    if is_full(brd):
        return 0

    if is_maximizing:
        best_score = -math.inf
        for i in range(9):
            if brd[i] == " ":
                brd[i] = "O"
                score = minimax(brd, depth + 1, False)
                brd[i] = " "
                best_score = max(score, best_score)
        return best_score
    else:
        best_score = math.inf
        for i in range(9):
            if brd[i] == " ":
                brd[i] = "X"
                score = minimax(brd, depth + 1, True)
                brd[i] = " "
                best_score = min(score, best_score)
        return best_score

# AI move
def ai_move():
    best_score = -math.inf
    move = None
    for i in range(9):
        if board[i] == " ":
            board[i] = "O"
            score = minimax(board, 0, False)
            board[i] = " "
            if score > best_score:
                best_score = score
                move = i
    board[move] = "O"

# Main game loop
def play_game():
    print("Welcome to Tic-Tac-Toe! You are X, AI is O.")
    print_board()

    while True:
        # Human move
        while True:
            try:
                user_move = int(input("Enter your move (1-9): ")) - 1
                if board[user_move] == " ":
                    board[user_move] = "X"
                    break
                else:
                    print("Cell already taken!")
            except (ValueError, IndexError):
                print("Invalid move. Enter number between 1 and 9.")

        print_board()

        if check_winner(board, "X"):
            print("ðŸŽ‰ You win!")
            break
        elif is_full(board):
            print("It's a draw!")
            break

        # AI move
        ai_move()
        print("AI played:")
        print_board()

        if check_winner(board, "O"):
            print("ðŸ˜” AI wins. Better luck next time!")
            break
        elif is_full(board):
            print("It's a draw!")
            break

# Run the game
if __name__ == "__main__":
    play_game()
